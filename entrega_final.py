# -*- coding: utf-8 -*-
"""Entrega final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F21tCfQqi5KH-y9txbYoqQUWTByByuXR
"""

!pip install yfinance
!pip install bs4
!pip install requests
!pip install nbformat
!pip install matplotlib
!pip install --upgrade plotly
!pip install IPython

import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots

import plotly.io as pio
pio.renderers.default = "iframe"

import warnings
warnings.filterwarnings("ignore", category=FutureWarning)

url = "https://cf-courses-data.s3.cloud-object-storage.appdomain.cloud/IBMDevelopmerSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm"

"""Pregunta 1: Extracci贸n de datos de acciones de Tesla utilizando yfinance


"""

Tesla = yf.Ticker("TSLA")

tesla_data = Tesla.history("max")

tesla_data.reset_index(inplace=True)
tesla_data.head()

"""Pregunta 2: Extracci贸n de datos de ingresos de Tesla utilizando Webscraping"""

tesla_revenue = Tesla.history("max")

tesla_revenue.reset_index(inplace=True)
tesla_revenue.tail()

"""Pregunta 3: Extracci贸n de datos de acciones de GameStop utilizando yfinance"""

GameStop = yf.Ticker("GME")

gme_data = GameStop.history("max")

gme_data.reset_index(inplace=True)
gme_data.head()

"""Pregunta 4: Extracci贸n de datos de ingresos de GameStop utilizando Webscraping"""

url = "https://cf-courses-data.s3.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.htm"

gme_revenue = GameStop.history("max")

gme_revenue.reset_index(inplace=True)
gme_revenue.tail()

"""Pregunta 5: Tablero de acciones e ingresos de Tesla"""

def make_graph(tesla_data, tesla_revenue, Tesla):
  fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing=.3)
  stock_data_specific = tesla_data[tesla_data.Date <= '2021-06-14']
  revenue_data_specific = tesla_revenue[tesla_revenue.Date <= '2021-04-30']
  fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date, infer_datetime_format=True), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
  fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
  fig.update_xaxes(title_text="Date", row=1, col=1)
  fig.update_xaxes(title_text="Date", row=2, col=1)
  fig.update_yaxes(title_text="Price($US)", row=1, col=1)
  fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
  fig.update_layout(showlegend=False),
  height=900,
  title=Tesla,
  xaxis_rangeslider_visible=True
  fig.show()

  from IPython.display import display, HTML

  fig_html = fig.to_html()
  display(HTML(fig_html))

"""Pregunta 6: Cuadro de mando de acciones e ingresos de GameStop"""

def make_graph(gme_data, gme_revenue, GameStop):
  fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing=.3)
  stock_data_specific = gme_data[gme_data.Date <= '2021-06-14']
  revenue_data_specific = gme_revenue[gme_revenue.Date <= '2021-04-30']
  fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date, infer_datetime_format=True), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
  fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
  fig.update_xaxes(title_text="Date", row=1, col=1)
  fig.update_xaxes(title_text="Date", row=2, col=1)
  fig.update_yaxes(title_text="Price($US)", row=1, col=1)
  fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
  fig.update_layout(showlegend=False),
  height=900,
  title=GameStop,
  xaxis_rangeslider_visible=True
  fig.show()

  from IPython.display import display, HTML
  fig_html = fig.to_html()
  display(HTML(fig_html))